{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\a complete web dovelopement course\\\\Vamps\\\\sustainable\\\\src\\\\components\\\\temperature-api\\\\temp-api.js\";\nimport React from 'react';\n\nclass Temperature extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      info: {},\n      city: \"\",\n      isLoaded: \"\"\n    };\n    this.getTemperature = this.getTemperature.bind(this);\n  }\n\n  getTemperature(name) {\n    this.setState({\n      isLoaded: false\n    });\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${name}&units=metric&appid=93dd43642be68e35c4c05698e2b7222e`).then(response => response.json()).then(data => {\n      const newInfo = data;\n      console.log(data);\n      const newState = Object.assign({}, this.state, {\n        info: newInfo,\n        isLoaded: true,\n        city: name\n      });\n      this.setState(newState);\n    }).catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n    console.log(\"Fetched name \" + this.props.name);\n    this.getTemperature(this.props.name);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) this.getTemperature(this.props.name);\n  }\n\n  render() {\n    if (!this.state.isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading.... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);else if (this.state.info.cod === \"404\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Not a valid city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this);else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [\"The current temperature in \", this.state.city, \" is \", this.state.info.main.temp, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nexport default Temperature;","map":{"version":3,"sources":["C:/Users/user/Desktop/a complete web dovelopement course/Vamps/sustainable/src/components/temperature-api/temp-api.js"],"names":["React","Temperature","Component","constructor","props","state","info","city","isLoaded","getTemperature","bind","name","setState","fetch","then","response","json","data","newInfo","console","log","newState","Object","assign","catch","error","componentDidMount","componentDidUpdate","prevProps","render","cod","main","temp"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAAyC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAG,EADE;AAETC,MAAAA,IAAI,EAAG,EAFE;AAGTC,MAAAA,QAAQ,EAAG;AAHF,KAAb;AAKA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAEDD,EAAAA,cAAc,CAACE,IAAD,EAAM;AAChB,SAAKC,QAAL,CAAc;AAACJ,MAAAA,QAAQ,EAAG;AAAZ,KAAd;AACAK,IAAAA,KAAK,CAAE,qDAAoDF,IAAK,sDAA3D,CAAL,CACCG,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEOG,IAAD,IAAU;AACZ,YAAMC,OAAO,GAAGD,IAAhB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,YAAMI,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiB,KAAKlB,KAAtB,EAA4B;AACzCC,QAAAA,IAAI,EAAGY,OADkC;AAEzCV,QAAAA,QAAQ,EAAG,IAF8B;AAGzCD,QAAAA,IAAI,EAAGI;AAHkC,OAA5B,CAAjB;AAKA,WAAKC,QAAL,CAAcS,QAAd;AACH,KAXD,EAYCG,KAZD,CAYOC,KAAK,IAAIN,OAAO,CAACC,GAAR,CAAYK,KAAZ,CAZhB;AAaH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfP,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkB,KAAKhB,KAAL,CAAWO,IAAzC;AACA,SAAKF,cAAL,CAAoB,KAAKL,KAAL,CAAWO,IAA/B;AACH;;AAEDgB,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AACzB,QAAGA,SAAS,CAACjB,IAAV,KAAmB,KAAKP,KAAL,CAAWO,IAAjC,EACI,KAAKF,cAAL,CAAoB,KAAKL,KAAL,CAAWO,IAA/B;AACP;;AACDkB,EAAAA,MAAM,GAAE;AACJ,QAAG,CAAC,KAAKxB,KAAL,CAAWG,QAAf,EACA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADA,KAIK,IAAG,KAAKH,KAAL,CAAWC,IAAX,CAAgBwB,GAAhB,KAAwB,KAA3B,EACD,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADC,KAID;AACA,0BACA;AAAK,QAAA,SAAS,EAAG,KAAjB;AAAA,kDAAmD,KAAKzB,KAAL,CAAWE,IAA9D,UAAwE,KAAKF,KAAL,CAAWC,IAAX,CAAgByB,IAAhB,CAAqBC,IAA7F;AAAA;AAAA;AAAA;AAAA;AAAA,cADA;AAGH;AAEJ;;AArDoC;;AAwDzC,eAAe/B,WAAf","sourcesContent":["import React from 'react';\r\n\r\nclass Temperature extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            info : {},\r\n            city : \"\",\r\n            isLoaded : \"\"\r\n        };\r\n        this.getTemperature = this.getTemperature.bind(this);\r\n    }\r\n\r\n    getTemperature(name){\r\n        this.setState({isLoaded : false});\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${name}&units=metric&appid=93dd43642be68e35c4c05698e2b7222e`)\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            const newInfo = data;\r\n            console.log(data);\r\n            const newState = Object.assign({},this.state,{\r\n                info : newInfo,\r\n                isLoaded : true,\r\n                city : name,\r\n            });\r\n            this.setState(newState);\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"Fetched name \" + this.props.name);\r\n        this.getTemperature(this.props.name);\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.name !== this.props.name)\r\n            this.getTemperature(this.props.name);\r\n    }\r\n    render(){\r\n        if(!this.state.isLoaded)\r\n        return(\r\n            <div>Loading.... </div>\r\n        );\r\n        else if(this.state.info.cod === \"404\")\r\n            return(\r\n                <div>Not a valid city</div>\r\n            );\r\n        else{\r\n            return(\r\n            <div className = \"App\">The current temperature in {this.state.city} is {this.state.info.main.temp} Â°C</div>\r\n            );\r\n        }\r\n    \r\n    }\r\n\r\n}\r\nexport default Temperature;"]},"metadata":{},"sourceType":"module"}